chains = 1, iter = 10000, warmup = 5000)
summary(sampling_res, pars=c('beta0', 'beta1','beta2', 'xi1'))
summary(sampling_res, pars=c('beta0', 'beta1','beta2'))
rstan:::rstudio_stanc("sensitivity.stan")
rstan:::rstudio_stanc("sensitivity.stan")
n = 1000
u = rbinom(n, 1, 0.5)
l = rbinom(n, 1, 0.5)
a = rbinom(n, 1, plogis(1 + 1*l + 1*u ) )
y = rbinom(n,1 , plogis(1 + 1*l - 1*u + 0*a ) )
stan_data = list(n=n, a=a, l=l, y=y, xi1=-1, xi2=1)
mod = stan_model("sensitivity.stan")
library(rstan)
n = 1000
u = rbinom(n, 1, 0.5)
l = rbinom(n, 1, 0.5)
a = rbinom(n, 1, plogis(1 + 1*l + 1*u ) )
y = rbinom(n,1 , plogis(1 + 1*l - 1*u + 0*a ) )
stan_data = list(n=n, a=a, l=l, y=y, xi1=-1, xi2=1)
mod = stan_model("sensitivity.stan")
sampling_res = sampling(mod, seed=1,data = stan_data,
chains = 1, iter = 10000, warmup = 5000)
summary(sampling_res, pars=c('beta0', 'beta1','beta2'))
## compare with frequentist estimator of the GLM
summary(glm(y ~ x1 + x2, family=binomial(link='logit')))
stan_data = list(n=n, a=a, l=l, y=y, xi1=-1, xi2=1, xi3=.5)
sampling_res = sampling(mod, seed=1,data = stan_data,
chains = 1, iter = 10000, warmup = 5000)
summary(sampling_res, pars=c('beta0', 'beta1','beta2'))
n = 300
u = rbinom(n, 1, 0.5)
l = rbinom(n, 1, 0.5)
a = rbinom(n, 1, plogis(1 + 1*l + 1*u ) )
y = rbinom(n,1 , plogis(1 + 1*l - 1*u + 0*a ) )
stan_data = list(n=n, a=a, l=l, y=y, xi1=-1, xi2=1, xi3=.5)
mod = stan_model("sensitivity.stan")
sampling_res = sampling(mod, seed=1,data = stan_data,
chains = 1, iter = 10000, warmup = 5000)
summary(sampling_res, pars=c('beta0', 'beta1','beta2'))
## compare with frequentist estimator of the GLM
n = 300
u = rbinom(n, 1, 0.5)
l = rnorm(n, 0,1)
a = rbinom(n, 1, plogis(1 + 1*l + 1*u ) )
y = rbinom(n,1 , plogis(1 + 1*l - 1*u + 0*a ) )
stan_data = list(n=n, a=a, l=l, y=y, xi1=-1, xi2=1, xi3=.5)
n = 300
u = rnorm(n, 0, 1)
l = rbinom(n, 1, 0.5)
a = rbinom(n, 1, plogis(1 + 1*l + 1*u ) )
y = rbinom(n,1 , plogis(1 + 1*l - 1*u + 0*a ) )
stan_data = list(n=n, a=a, l=l, y=y, xi1=-1, xi2=1, xi3=.5)
rstan:::rstudio_stanc("sensitivity.stan")
rstan:::rstudio_stanc("sensitivity.stan")
rstan:::rstudio_stanc("sensitivity.stan")
rstan:::rstudio_stanc("sensitivity.stan")
rstan:::rstudio_stanc("sensitivity.stan")
rstan:::rstudio_stanc("sensitivity.stan")
rstan:::rstudio_stanc("sensitivity.stan")
rstan:::rstudio_stanc("sensitivity.stan")
rstan:::rstudio_stanc("sensitivity.stan")
rstan:::rstudio_stanc("sensitivity.stan")
rstan:::rstudio_stanc("sensitivity.stan")
rstan:::rstudio_stanc("sensitivity.stan")
rstan:::rstudio_stanc("sensitivity.stan")
rstan:::rstudio_stanc("sensitivity.stan")
rstan:::rstudio_stanc("sensitivity.stan")
rstan:::rstudio_stanc("sensitivity.stan")
rstan:::rstudio_stanc("sensitivity.stan")
rstan:::rstudio_stanc("sensitivity.stan")
rstan:::rstudio_stanc("sensitivity.stan")
rstan:::rstudio_stanc("sensitivity.stan")
rstan:::rstudio_stanc("sensitivity.stan")
rstan:::rstudio_stanc("sensitivity.stan")
rstan:::rstudio_stanc("sensitivity.stan")
rstan:::rstudio_stanc("sensitivity.stan")
mod = stan_model("sensitivity.stan")
sampling_res = sampling(mod, seed=1,data = stan_data,
chains = 1, iter = 10000, warmup = 5000)
summary(sampling_res, pars=c('beta0', 'beta1','beta2','causal_effect'))
n = 1000
u = rnorm(n, 0, 1)
l = rbinom(n, 1, 0.5)
a = rbinom(n, 1, plogis(1 + 1*l + 1*u ) )
y = rbinom(n,1 , plogis(1 + 1*l - 1*u + 0*a ) )
stan_data = list(n=n, a=a, l=l, y=y, xi1=-1, xi2=1, xi3=.5)
mod = stan_model("sensitivity.stan")
sampling_res = sampling(mod, seed=1,data = stan_data,
chains = 1, iter = 10000, warmup = 5000)
summary(sampling_res, pars=c('beta0', 'beta1','beta2','causal_effect'))
rstan:::rstudio_stanc("sensitivity.stan")
stan_data = list(n=n, a=a, l=l, y=y, xi1=0, xi2=0)
mod = stan_model("sensitivity.stan")
sampling_res = sampling(mod, seed=1,data = stan_data,
chains = 1, iter = 10000, warmup = 5000)
summary(sampling_res, pars=c('beta0', 'beta1','beta2','causal_effect'))
glm_res = glm(y ~ a + l, family=binomial(link='logit'))
summary(glm_res)
mean(l)
mean(l)* ( plogis( sum( glm_res$coefficients*(1,1,1) ) ) - plogis( sum( glm_res$coefficients*(1,0,1) ) ) ) +
mean(l)* ( plogis( sum( glm_res$coefficients*c(1,1,1) ) ) - plogis( sum( glm_res$coefficients*c(1,0,1) ) ) ) +
(1-mean(l))* ( plogis( sum( glm_res$coefficients*c(1,1,0) ) ) - plogis( sum( glm_res$coefficients*c(1,0,0) ) ) )
summary(sampling_res, pars=c('beta0', 'beta1','beta2','causal_effect'))
glm_res
n = 1000
u = rnorm(n, 0, 1)
l = rbinom(n, 1, 0.5)
a = rbinom(n, 1, plogis(1 + 1*l + 1.5*u ) )
y = rbinom(n,1 , plogis(1 + 1*l - 1.5*u + 0*a ) )
glm_res = glm(y ~ a + l, family=binomial(link='logit'))
summary(glm_res)
mean(l)* ( plogis( sum( glm_res$coefficients*c(1,1,1) ) ) - plogis( sum( glm_res$coefficients*c(1,0,1) ) ) ) +
(1-mean(l))* ( plogis( sum( glm_res$coefficients*c(1,1,0) ) ) - plogis( sum( glm_res$coefficients*c(1,0,0) ) ) )
n = 1000
u = rnorm(n, 0, 1)
l = rbinom(n, 1, 0.5)
a = rbinom(n, 1, plogis(1 + 1*l + 2*u ) )
y = rbinom(n,1 , plogis(1 + 1*l - 2*u + 0*a ) )
glm_res = glm(y ~ a + l, family=binomial(link='logit'))
summary(glm_res)
mean(l)* ( plogis( sum( glm_res$coefficients*c(1,1,1) ) ) - plogis( sum( glm_res$coefficients*c(1,0,1) ) ) ) +
(1-mean(l))* ( plogis( sum( glm_res$coefficients*c(1,1,0) ) ) - plogis( sum( glm_res$coefficients*c(1,0,0) ) ) )
sampling_res = sampling(mod, seed=1,data = stan_data,
chains = 1, iter = 10000, warmup = 5000)
stan_data = list(n=n, a=a, l=l, y=y, xi1=0, xi2=0)
sampling_res = sampling(mod, seed=1,data = stan_data,
chains = 1, iter = 10000, warmup = 5000)
summary(sampling_res, pars=c('beta0', 'beta1','beta2','causal_effect'))
glm_res = glm(y ~ a + l, family=binomial(link='logit'))
summary(glm_res)
mean(l)* ( plogis( sum( glm_res$coefficients*c(1,1,1) ) ) - plogis( sum( glm_res$coefficients*c(1,0,1) ) ) ) +
(1-mean(l))* ( plogis( sum( glm_res$coefficients*c(1,1,0) ) ) - plogis( sum( glm_res$coefficients*c(1,0,0) ) ) )
stan_data = list(n=n, a=a, l=l, y=y, xi1=2, xi2=2)
mod = stan_model("sensitivity.stan")
sampling_res = sampling(mod, seed=1,data = stan_data,
chains = 1, iter = 10000, warmup = 5000)
summary(sampling_res, pars=c('beta0', 'beta1','beta2','causal_effect'))
stan_data = list(n=n, a=a, l=l, y=y, xi1=-2, xi2=2)
sampling_res = sampling(mod, seed=1,data = stan_data,
chains = 1, iter = 10000, warmup = 5000)
summary(sampling_res, pars=c('beta0', 'beta1','beta2','causal_effect'))
n = 300
u = rnorm(n, 0, 1)
l = rbinom(n, 1, 0.5)
a = rbinom(n, 1, plogis(1 + 1*l + 2*u ) )
y = rbinom(n,1 , plogis(1 + 1*l - 2*u + 0*a ) )
stan_data = list(n=n, a=a, l=l, y=y, xi1=-2, xi2=2)
sampling_res = sampling(mod, seed=1,data = stan_data,
chains = 1, iter = 10000, warmup = 5000)
sampling_res = sampling(mod, seed=1,data = stan_data,
chains = 1, iter = 2000, warmup = 1000)
summary(sampling_res, pars=c('beta0', 'beta1','beta2','causal_effect'))
xi1v = seq(-2,2, length.out=10)
xi2v = seq(-2,2, length.out=10)
summary(sampling_res, pars=c('causal_effect'))
tt = summary(sampling_res, pars=c('causal_effect'))
tt$summary
tt$summary[c('mean','2.5%')]
tt$summary[1]
tt$c_summary[1]
tt$c_summary['mean']
names(tt$c_summary)
names(tt$summary)
tt$summary[c(1,4,8)]
xi1v = seq(0, -3, length.out=10)
xi2v = seq(0,  3, length.out=10)
n = 300
u = rnorm(n, 0, 1)
l = rbinom(n, 1, 0.5)
a = rbinom(n, 1, plogis(1 + 1*l + 2*u ) ) ## u sicker - sicker patients more likey to get treated, less likely to have good outcomes.
y = rbinom(n,1 , plogis(1 + 1*l - 2*u + 0*a ) )
mod = stan_model("sensitivity.stan")
xi1v = seq(0, -3, length.out=10)
xi2v = seq(0,  3, length.out=10)
res = matrix(NA, nrow=10, ncol=10)
for( j in 1:10){
for(k in 1:10){
stan_data = list(n=n, a=a, l=l, y=y, xi1 = xi1v[j] , xi2 = xi2v[k] )
sampling_res = sampling(mod, seed=1,data = stan_data, chains = 1, iter = 2000, warmup = 1000)
tt = summary(sampling_res, pars=c('causal_effect'))
res[j,k] = tt$summary[4]
}
}
View(res)
image(1:10, 1:10, t(res)[,10:1], col = heat.colors(100), xlab = "X", ylab = "Y")
library(ggplot2)
library(reshape2)  # or tidyr::pivot_longer
install.packages('reshape')
library(reshape2)  # or tidyr::pivot_longer
# Convert to data frame
mat <- matrix(runif(100), nrow = 10)
# Convert to data frame
df <- melt(res)
library(reshape2)  # or tidyr::pivot_longer
install.packages('reshape2')
library(reshape2)  # or tidyr::pivot_longer
# Convert to data frame
df <- melt(res)
View(df)
colnames(df) <- c("Y", "X", "value")
# Plot heatmap
ggplot(df, aes(x = X, y = Y, fill = value)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "red") +
theme_minimal() +
labs(title = "10x10 Heatmap")
# Convert to data frame
colnames(res) = xi2v
rownames(res) = xi1v
df <- melt(res)
colnames(df) <- c("Y", "X", "value")
# Plot heatmap
ggplot(df, aes(x = X, y = Y, fill = value)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "red") +
theme_minimal() +
labs(title = "10x10 Heatmap")
glm_res = glm(y ~ a + l, family=binomial(link='logit'))
summary(glm_res)
mean(l)* ( plogis( sum( glm_res$coefficients*c(1,1,1) ) ) - plogis( sum( glm_res$coefficients*c(1,0,1) ) ) ) +
(1-mean(l))* ( plogis( sum( glm_res$coefficients*c(1,1,0) ) ) - plogis( sum( glm_res$coefficients*c(1,0,0) ) ) )
ggplot(df, aes(x = X, y = Y, fill = value)) +
geom_tile() +
geom_contour(aes(z = value), breaks = threshold, color = "black") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = threshold) +
theme_minimal() +
labs(title = "Contour at Threshold = -0.2667")
threshold <- -0.2667
# Create a new column to indicate above/below threshold
df$highlight <- ifelse(df$value > threshold, "Above", "Below")
ggplot(df, aes(x = X, y = Y, fill = value)) +
geom_tile() +
geom_contour(aes(z = value), breaks = threshold, color = "black") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = threshold) +
theme_minimal() +
labs(title = "Contour at Threshold = -0.2667")
ggplot(df, aes(x = X, y = Y, fill = value)) +
geom_tile() +
geom_text(data = subset(df, value > threshold), aes(label = round(value, 2)), color = "black") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = threshold) +
theme_minimal() +
labs(title = "Values Annotated Above -0.2667")
ggplot(df, aes(x = X, y = Y, fill = value)) +
geom_tile() +
geom_text(data = subset(df, value > threshold), aes(label = round(value, 2)), color = "black") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = threshold) +
theme_minimal() +
labs(title = "Values Annotated Above -0.2667")
library(latex)
library(latex2exp)
ggplot(df, aes(x = X, y = Y, fill = value)) +
geom_tile() +
geom_text(data = subset(df, value > threshold), aes(label = round(value, 2)), color = "black") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = threshold) +
theme_minimal() +
labs(title = "Values Annotated Above -0.2667", x = TeX("\xi_2"))
ggplot(df, aes(x = X, y = Y, fill = value)) +
geom_tile() +
geom_text(data = subset(df, value > threshold), aes(label = round(value, 2)), color = "black") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = threshold) +
theme_minimal() +
labs(title = "Values Annotated Above -0.2667") +
xlabs(x = TeX("\xi_1"))
ggplot(df, aes(x = X, y = Y, fill = value)) +
geom_tile() +
geom_text(data = subset(df, value > threshold), aes(label = round(value, 2)), color = "black") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = threshold) +
theme_minimal() +
labs(title = "Values Annotated Above -0.2667") +
xlabs(TeX("\xi_1"))
ggplot(df, aes(x = X, y = Y, fill = value)) +
geom_tile() +
geom_text(data = subset(df, value > threshold), aes(label = round(value, 2)), color = "black") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = threshold) +
theme_minimal() +
labs(title = "Values Annotated Above -0.2667") +
xlabs(TeX("\xi_1"))
ggplot(df, aes(x = X, y = Y, fill = value)) +
geom_tile() +
geom_text(data = subset(df, value > threshold), aes(label = round(value, 2)), color = "black") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = threshold) +
theme_minimal() +
labs(title = "Values Annotated Above -0.2667") +
xlabs(TeX("$\xi_1$"))
ggplot(df, aes(x = X, y = Y, fill = value)) +
geom_tile() +
geom_text(data = subset(df, value > threshold), aes(label = round(value, 2)), color = "black") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = threshold) +
theme_minimal() +
labs(title = "Values Annotated Above -0.2667") +
xlabs(TeX("$\\xi_1$"))
ggplot(df, aes(x = X, y = Y, fill = value)) +
geom_tile() +
geom_text(data = subset(df, value > threshold), aes(label = round(value, 2)), color = "black") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = threshold) +
theme_minimal() +
labs(title = "Values Annotated Above -0.2667", x=TeX("$\\xi_1$"))
labs(title = "Values Annotated Above -0.2667", x=TeX("$\\xi_1$"),y=TeX("$\\xi_2" )
ggplot(df, aes(x = X, y = Y, fill = value)) +
ggplot(df, aes(x = X, y = Y, fill = value)) +
geom_tile() +
geom_text(data = subset(df, value > threshold), aes(label = round(value, 2)), color = "black") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = threshold) +
theme_minimal() +
labs(title = "Values Annotated Above -0.2667",
x=TeX("$\\xi_1$"), y=TeX("$\\xi_2") )
ggplot(df, aes(x = X, y = Y, fill = value)) +
geom_tile() +
geom_text(data = subset(df, value > threshold), aes(label = round(value, 2)), color = "black") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = threshold) +
theme_minimal() +
labs(title = "Values Annotated Above -0.2667",
x=TeX("$\\xi_1$"), y=TeX("$\\xi_2") ) +
theme(
axis.title.x = element_text(size = 16),  # x-axis label
axis.title.y = element_text(size = 16),  # y-axis label
axis.text.x = element_text(size = 14),   # x-axis tick labels
axis.text.y = element_text(size = 14)    # y-axis tick labels
)
ggplot(df, aes(x = X, y = Y, fill = value)) +
geom_tile() +
geom_text(data = subset(df, value > threshold), aes(label = round(value, 2)), color = "black") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = threshold) +
theme_minimal() +
labs(title = "Lower limit of 95\% credible interval across prios.",
ggplot(df, aes(x = X, y = Y, fill = value)) +
geom_tile() +
geom_text(data = subset(df, value > threshold), aes(label = round(value, 2)), color = "black") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = threshold) +
theme_minimal() +
labs(title = "Lower limit of 95\\% credible interval across prios.",
x=TeX("$\\xi_1$"), y=TeX("$\\xi_2") ) +
theme(
axis.title.x = element_text(size = 16),  # x-axis label
axis.title.y = element_text(size = 16),  # y-axis label
axis.text.x = element_text(size = 14),   # x-axis tick labels
axis.text.y = element_text(size = 14)    # y-axis tick labels
)
ggplot(df, aes(x = X, y = Y, fill = value)) +
geom_tile() +
geom_text(data = subset(df, value > threshold), aes(label = round(value, 2)), color = "black") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = threshold) +
theme_minimal() +
labs(title = "Lower limit of 95% credible interval across prios.",
x=TeX("$\\xi_1$"), y=TeX("$\\xi_2") ) +
theme(
axis.title.x = element_text(size = 16),  # x-axis label
axis.title.y = element_text(size = 16),  # y-axis label
axis.text.x = element_text(size = 14),   # x-axis tick labels
axis.text.y = element_text(size = 14)    # y-axis tick labels
)
ggplot(df, aes(x = X, y = Y, fill = value)) +
geom_tile() +
geom_text(data = subset(df, value > threshold), aes(label = round(value, 2)), color = "black") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = threshold) +
theme_minimal() +
labs(title = "Lower limit of 95% credible interval across prios. Point estimate at -0.27",
x=TeX("$\\xi_1$"), y=TeX("$\\xi_2") ) +
theme(
axis.title.x = element_text(size = 16),  # x-axis label
axis.title.y = element_text(size = 16),  # y-axis label
axis.text.x = element_text(size = 14),   # x-axis tick labels
axis.text.y = element_text(size = 14)    # y-axis tick labels
)
mean(l)* ( plogis( sum( glm_res$coefficients*c(1,1,1) ) ) - plogis( sum( glm_res$coefficients*c(1,0,1) ) ) ) +
(1-mean(l))* ( plogis( sum( glm_res$coefficients*c(1,1,0) ) ) - plogis( sum( glm_res$coefficients*c(1,0,0) ) ) )
library(rstan)
library(latex2exp)
set.seed(1)
n = 300
u = rnorm(n, 0, 1)
l = rbinom(n, 1, 0.5)
a = rbinom(n, 1, plogis(1 + 1*l + 2*u ) ) ## u sicker - sicker patients more likey to get treated, less likely to have good outcomes.
y = rbinom(n,1 , plogis(1 + 1*l - 2*u + 0*a ) )
mod = stan_model("sensitivity.stan")
## Estimate causal effect via frequentist standardization assuming no unmeasured confounding
glm_res = glm(y ~ a + l, family=binomial(link='logit'))
summary(glm_res)
mean(l)* ( plogis( sum( glm_res$coefficients*c(1,1,1) ) ) - plogis( sum( glm_res$coefficients*c(1,0,1) ) ) ) +
(1-mean(l))* ( plogis( sum( glm_res$coefficients*c(1,1,0) ) ) - plogis( sum( glm_res$coefficients*c(1,0,0) ) ) )
## Estimate causal effect via Bayesian standardization assuming no unmeasured confounding
stan_data = list(n=n, a=a, l=l, y=y, xi1 = 0, xi2 = 0 )
sampling_res = sampling(mod, seed=1,data = stan_data, chains = 1, iter = 2000, warmup = 1000)
summary(sampling_res, pars=c('causal_effect'))
xi1v = seq(0, -3, length.out=10)
xi2v = seq(0,  3, length.out=10)
res = matrix(NA, nrow=10, ncol=10)
for( j in 1:10){
for(k in 1:10){
stan_data = list(n=n, a=a, l=l, y=y, xi1 = xi1v[j] , xi2 = xi2v[k] )
sampling_res = sampling(mod, seed=1,data = stan_data, chains = 1, iter = 2000, warmup = 1000)
tt = summary(sampling_res, pars=c('causal_effect'))
res[j,k] = tt$summary[8]
}
}
# Convert to data frame
colnames(res) = xi2v
rownames(res) = xi1v
df <- melt(res)
colnames(df) <- c("Y", "X", "value")
threshold <- -0.2667
# Create a new column to indicate above/below threshold
df$highlight <- ifelse(df$value > threshold, "Above", "Below")
ggplot(df, aes(x = X, y = Y, fill = value)) +
geom_tile() +
geom_text(data = subset(df, value > threshold), aes(label = round(value, 2)), color = "black") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = threshold) +
theme_minimal() +
labs(title = "Lower limit of 95% credible interval across prios. Point estimate at -0.27",
x=TeX("$\\xi_1$"), y=TeX("$\\xi_2") ) +
theme(
axis.title.x = element_text(size = 16),  # x-axis label
axis.title.y = element_text(size = 16),  # y-axis label
axis.text.x = element_text(size = 14),   # x-axis tick labels
axis.text.y = element_text(size = 14)    # y-axis tick labels
)
threshold <- 0
# Create a new column to indicate above/below threshold
df$highlight <- ifelse(df$value > threshold, "Above", "Below")
ggplot(df, aes(x = X, y = Y, fill = value)) +
geom_tile() +
geom_text(data = subset(df, value > threshold), aes(label = round(value, 2)), color = "black") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = threshold) +
theme_minimal() +
labs(title = "Lower limit of 95% credible interval across prios. Point estimate at -0.27",
x=TeX("$\\xi_1$"), y=TeX("$\\xi_2") ) +
theme(
axis.title.x = element_text(size = 16),  # x-axis label
axis.title.y = element_text(size = 16),  # y-axis label
axis.text.x = element_text(size = 14),   # x-axis tick labels
axis.text.y = element_text(size = 14)    # y-axis tick labels
)
ggplot(df, aes(x = X, y = Y, fill = value)) +
geom_tile() +
geom_text(data = subset(df, value > threshold), aes(label = round(value, 2)), color = "black") +
scale_fill_gradient2(low = "lightblue", mid = "white", high = "red", midpoint = threshold) +
theme_minimal() +
labs(title = "Lower limit of 95% credible interval across prios. Point estimate at -0.27",
x=TeX("$\\xi_1$"), y=TeX("$\\xi_2") ) +
theme(
axis.title.x = element_text(size = 16),  # x-axis label
axis.title.y = element_text(size = 16),  # y-axis label
axis.text.x = element_text(size = 14),   # x-axis tick labels
axis.text.y = element_text(size = 14)    # y-axis tick labels
)
ggplot(df, aes(x = X, y = Y, fill = value)) +
geom_tile() +
geom_text(data = subset(df, value > threshold), aes(label = round(value, 2)), color = "black") +
scale_fill_gradient2(low = "lightblue", mid = "white", high = "lightred", midpoint = threshold) +
theme_minimal() +
labs(title = "Lower limit of 95% credible interval across prios. Point estimate at -0.27",
x=TeX("$\\xi_1$"), y=TeX("$\\xi_2") ) +
theme(
axis.title.x = element_text(size = 16),  # x-axis label
axis.title.y = element_text(size = 16),  # y-axis label
axis.text.x = element_text(size = 14),   # x-axis tick labels
axis.text.y = element_text(size = 14)    # y-axis tick labels
)
ggplot(df, aes(x = X, y = Y, fill = value)) +
geom_tile() +
geom_text(data = subset(df, value > threshold), aes(label = round(value, 2)), color = "black") +
scale_fill_gradient2(low = "skyblue", mid = "white", high = "lightred", midpoint = threshold) +
theme_minimal() +
labs(title = "Lower limit of 95% credible interval across prios. Point estimate at -0.27",
x=TeX("$\\xi_1$"), y=TeX("$\\xi_2") ) +
theme(
axis.title.x = element_text(size = 16),  # x-axis label
axis.title.y = element_text(size = 16),  # y-axis label
axis.text.x = element_text(size = 14),   # x-axis tick labels
axis.text.y = element_text(size = 14)    # y-axis tick labels
)
ggplot(df, aes(x = X, y = Y, fill = value)) +
geom_tile() +
geom_text(data = subset(df, value > threshold), aes(label = round(value, 2)), color = "black") +
scale_fill_gradient2(low = "skyblue", mid = "white", high = "firebrickred", midpoint = threshold) +
theme_minimal() +
labs(title = "Lower limit of 95% credible interval across prios. Point estimate at -0.27",
x=TeX("$\\xi_1$"), y=TeX("$\\xi_2") ) +
theme(
axis.title.x = element_text(size = 16),  # x-axis label
axis.title.y = element_text(size = 16),  # y-axis label
axis.text.x = element_text(size = 14),   # x-axis tick labels
axis.text.y = element_text(size = 14)    # y-axis tick labels
)
ggplot(df, aes(x = X, y = Y, fill = value)) +
geom_tile() +
geom_text(data = subset(df, value > threshold), aes(label = round(value, 2)), color = "black") +
scale_fill_gradient2(low = "skyblue", mid = "white", high = "darkred", midpoint = threshold) +
theme_minimal() +
labs(title = "Lower limit of 95% credible interval across prios. Point estimate at -0.27",
x=TeX("$\\xi_1$"), y=TeX("$\\xi_2") ) +
theme(
axis.title.x = element_text(size = 16),  # x-axis label
axis.title.y = element_text(size = 16),  # y-axis label
axis.text.x = element_text(size = 14),   # x-axis tick labels
axis.text.y = element_text(size = 14)    # y-axis tick labels
)
ggplot(df, aes(x = X, y = Y, fill = value)) +
geom_tile() +
geom_text(data = subset(df, value > threshold), aes(label = round(value, 2)), color = "black") +
scale_fill_gradient2(low = "skyblue", mid = "white", high = "darkred", midpoint = threshold) +
theme_minimal() +
labs(title = TeX("Upper limit of 95% CrI across priors. At $\\xi_1=\\xi_2=0$, -.31 [-.39,-.23]"),
x=TeX("$\\xi_1$"), y=TeX("$\\xi_2") ) +
theme(
axis.title.x = element_text(size = 16),  # x-axis label
axis.title.y = element_text(size = 16),  # y-axis label
axis.text.x = element_text(size = 14),   # x-axis tick labels
axis.text.y = element_text(size = 14)    # y-axis tick labels
)
summary(sampling_res, pars=c('causal_effect'))
rstan:::rstudio_stanc("sensitivity.stan")
